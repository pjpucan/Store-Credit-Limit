<!-- snippets/product__pickup-content.liquid -->
{% comment %} 
  Block to display local pickup availability.

  Accepts:
  - blocksettings: {object} Liquid object of block settings.
  
  Globals:
  - type_seperator: {string} Class string to set type of separator (dot or pipe).
  - close_button_color: {string} Class string to set color of close button.
  - close_button_content: {string} Content to be displayed on close button.

  Usage:
    {% render 'product__pickup', 
      block: block 
    %}  
      
  Recommendations:
  - Ensure locations and availability have been setup with pickup locations.
{% endcomment %}

{% liquid 
  assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities | where: 'pick_up_enabled', true 
  assign pick_up_availabilities_in_stock = pick_up_availabilities | where: 'available', true 
  assign closest_location = pick_up_availabilities.first 
  if featured 
    assign product = section.settings.product
  endif

  capture drawer_id 
    echo block.id | prepend: 'drawer_'
  endcapture
%}

{% if product.available and pick_up_availabilities_in_stock.size > 0 and pick_up_availabilities.size > 0 %}
  {% if pick_up_availabilities.size > 0 %}

    {% comment %} Drawer with more info {% endcomment %}
    {% capture drawer_content %}

      {% comment %} Close button {% endcomment %}
      <div class="items-center justify-between hidden p-4 border--b-width md:flex color__border-divider-1 color__bg-body">
        <span></span>
        <button 
          class="
            btn
            {{ settings.close_button_color }}
          "
          type="button" 
          title="{{ 'actions.close' | t }}"
          @click="
            {{ drawer_id }} = false; 
            has_overlay = false;
          ">
          {% if settings.close_button_content contains 'icon' %}
            {% render 'component__icon', icon: 'x', size: '20' %} 
          {% endif %}
          {% if settings.close_button_content contains 'text' %}
            <span 
              {% if settings.close_button_content contains 'icon' %}class="ml-1"{% endif %}>
              {{ 'actions.close' | t }}
            </span>
          {% endif %}
        </button>
      </div>

      {% comment %} Closest location {% endcomment %}
      <div class="p-4 py-8 border--b-width color__border-shade-1">
        <strong class="mb-2 type--big">
          {{ product.title }}
        </strong>
        <p>
          {% if closest_location.available %}
            {% render 'component__icon', icon: 'check', size: '20', class: 'mr-1' %}
            {{ 'info.available_for_pickup' | t }}
          {% else %}
            {% render 'component__icon', icon: 'x', size: '20', class: 'mr-1' %}
            {{ 'info.out_of_stock' | t }}
          {% endif %}
        </p>
        <p>
          {% render 'component__icon', icon: 'check', size: '20', class: 'mr-1' %} 
          {{ closest_location.pick_up_time }}
        </p>
      </div>

      {% comment %} All locations {% endcomment %}
      <div class="p-4 py-8 overflow-scroll grow">
        {% for availability in pick_up_availabilities %}
          <div class="flex gap-2 mb-4">
            <div>
              {% if availability.available %}
                {% render 'component__icon', icon: 'check', size: '20', class: 'mr-1' %}
              {% else %}
                {% render 'component__icon', icon: 'x', size: '20', class: 'mr-1 text-red-500' %}
              {% endif %}
            </div>
            <div>
              <strong>
                {{ availability.location.name }}
              </strong>
              <p class="flex items-center type--small">
                {% if availability.available %}
                  {{ 'info.available_for_pickup' | t }}
                {% else %}
                {{ 'info.out_of_stock' | t }}
                {% endif %}
              </p>
              <p class="mb-2 type--small">
                {{ availability.pick_up_time }}
              </p>
              {% assign address = availability.location.address %}
              <address class="opacity-50 type--small">
                {{ address | format_address }}
              </address>
              {% if address.phone.size > 0 %}
                <p class="opacity-50 type--small">
                  {{ address.phone }}<br>
                </p>
              {% endif %}
            </div>
          </div>
        {% endfor %}
      </div>
      
    {% endcapture %}
    
    {% render 'component__dragdrawer', 
      drawer_id: drawer_id,
      mobile_pos: 'bottom',
      desktop_pos: 'right',
      enable_full_height: false,
      content: drawer_content 
    %}

  {% endif %}
{% endif %}
  