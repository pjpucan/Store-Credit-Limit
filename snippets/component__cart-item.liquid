<!-- snippets/component__cart-item.liquid -->
{% comment %} 
  This is a standard cart item component used in the Shopify theme. It is used to display individual items in the cart.
  
  Accepts:
  - item: {Object} A liquid object containing cart item values. This includes product details like name, price, quantity, etc.
  
  Usage:
    {% render 'component__cart-item', 
      item: item
    %}

  Globals:
  - type_seperator: {string} This sets the style for the divider between the cart items. It can be 'dot' or 'line'.
  - enable_animations: {boolean} This indicates whether animations should be used in the cart. If true, animations are enabled.
  
  Recommendations:
  - This component is best used while looping through cart items to display each item individually with its details. 
{% endcomment %}

<div 
  class="
    border--b-width flex w-full items-stretch justify-between
    {{ section.settings.main_color_scheme_first }}
    {{ section.settings.main_color_border }}
  ">

  {% comment %} Image {% endcomment %}
  <div 
    class="w-[20%] flex-none overflow-hidden flex items-start justify-center p-4 !pr-0">
    <a 
      href="{{ item.url }}"
      class="
        flex items-start w-full border--width
        {{ section.settings.color_border }}
      "
      {% if settings.enable_animations %}
        :class="{ 
          'opacity-50' : cart_loading }" 
      {% endif %}>
      {% render 'component__image', 
        image: item.image,
        max_width: 256,
        background_class: 'color__bg-shade-2',
        container_class: 'h-full',
        image_class: 'h-full',
        ratio_class: 'aspect-1',
        crop_class: 'object-cover',
        enable_lazy_load: true,
        enable_2x: true
      %}
    </a>
  </div>

  {% comment %} Content {% endcomment %}
  <div 
    class="flex flex-col justify-between flex-grow gap-4 p-4 animation-300"
    {% if settings.enable_animations %}
      :class="{ 
        'opacity-50' : cart_loading }"
    {% endif %}>

    {% comment %} Details and price {% endcomment %}
    <div 
      class="flex items-start justify-between gap-2 "
      x-data="{ 
        properties_drop: false 
      }">

      {% comment %} Details {% endcomment %}
      <div>
        
        {% comment %} Title {% endcomment %}
        <a 
          class="flex mb-2 no-underline hover:no-underline"
          tabindex="-1"
          href="{{ item.url }}">
          {{ item.title }}
        </a>

        {% comment %} Discount {% endcomment %}
        {% for discount_allocation in item.discount_allocations %}
          <div class="flex mb-2">
            {% capture badge_content %}
              <span 
                class="type--smaller">
                {{ discount_allocation.discount_application.title }} 
                {% render 'component__format-price', price: discount_allocation.amount %}
              </span>
            {% endcapture %}
            {% render 'component__badge', 
              background: 'shade-1',
              text: 'dark',
              border: 'transparent',
              content: badge_content %}
          </div>
        {% endfor %}
        
        {% comment %} Properties {% endcomment %}
        {% assign show_properties_button = false %}
        {% for property in item.properties %}
          {% assign show_properties_button = true %}
        {% endfor %}
        <button 
          class="flex items-center mb-2 type--smaller"
          type="button" 
          x-show="{{ show_properties_button }}"
          @click="properties_drop = ! properties_drop">
          {% render 'component__icon', icon: 'plus', size: '14', class: 'mr-1' %}
          {{ 'actions.see_details' | t }}
        </button>
        <div x-show="properties_drop">
          {% for property in item.properties %}
            {% assign property_first_char = property.first | slice: 0 %}
            {% if property.last != blank and property_first_char != '_' %}
                <p class="flex mb-0 opacity-75 type--smaller">
                  {{ property.first }}: {{ property.last }}
                </p>
            {% endif %}
          {% endfor %}
        </div>

      </div>

      {% comment %} Price {% endcomment %}
      <div 
        class="flex flex-col items-end flex-none">

        {% comment %} Price {% endcomment %}
        <div
          class="flex flex-col items-end">
          <span>
            {% render 'component__format-price', price: item.line_price %}
          </span>
          {% if item.original_price > item.line_price %}
            <span>
              <s class="opacity-50">
                {% render 'component__format-price', price: item.original_price %}
              </s>
            </span>
          {% endif %}
        </div>

        {% comment %} Unit price {% endcomment %}
        {% if item.unit_price %}
          <div 
            class="opacity-75 type--smaller">
            <span>
              {% render 'component__format-price', price: item.unit_price %}
            </span>
            <span>/</span>
            <span>{{ item.unit_price_measurement.reference_value }}{{ item.unit_price_measurement.reference_unit }}</span>
          </div>
        {% endif %}

        {% comment %} Details {% endcomment %}
        <div 
          class="flex flex-col items-end mt-1">
          <p class="mb-1 opacity-75 type--smaller">
            {{ item.variant.title }}
          </p>
          {% if section.settings.main_enable_cart_sku %}
            <p class="mb-1 opacity-75 type--smaller">
              {{ item.sku }}
            </p>
          {% endif %}
          <p class="mb-1 opacity-75 type--smaller">
            {{ item.selling_plan_allocation.selling_plan.name }}
          </p>
        </div>

      </div>
      
    </div>

    {% comment %} Actions {% endcomment %}
    <div class="flex items-end justify-between gap-2">

      {% comment %} Quantity {% endcomment %}
      <label 
        class="sr-only" 
        for="{{ product.id }}-quantity">
        {{ 'labels.quantity' | t }}
      </label>
      <div 
        class="
          relative flex overflow-hidden max-w-[128px]
          border__input--radius border__input--radius border__input color__border-input hover:border__input--hover focus-within:border__input--focus
        " 
        x-data="{ 
          button_loading: false
        }">
        <input 
          id="{{ item.key }}-quantity" 
          class="!border-0 text-left !rounded-none" 
          type="number" 
          placeholder="1" 
          min="1"
          value="{{ item.quantity }}"
          @change.debounce="
            changeCartItemQuantity('{{ item.key }}', {{ item.quantity }}, false, false);
            button_loading = true; 
            setTimeout(function(){ button_loading = false}, 1000);
          "
        >
        <div 
          class="
            btn__spinner !color__bg-overlay-1
            !w-full !top-0 !bottom-0 !left-0 !right-0 !transform-none
          "
          :class="{ '!visible !z-10' : button_loading }">
          {% render 'component__icon', icon: 'spinner', size: '24', class: '' %}
        </div>
        <div class="absolute right-0 flex flex-col justify-center h-full gap-0 color__bg-input">
          <button 
            class="btn btn--smaller btn--plain shrink-0 !rounded-none color__outline-input outline--width" 
            title="{{ 'actions.increase_item_quantity' | t }}"
            type="button"
            :disabled="button_loading"
            @click.prevent="
              button_loading = true; 
              setTimeout(function(){ button_loading = false}, 1000);
              changeCartItemQuantity('{{ item.key }}', {{ item.quantity }}+1, false, false);
            ">
            {% render 'component__icon', icon: 'chevron-up', size: '14', class: '' %}
          </button>
          <button 
            class="btn btn--smaller btn--plain shrink-0 !rounded-none color__outline-input outline--width
            title="{{ 'actions.decrease_item_quantity' | t }}"
            type="button"
            :disabled="button_loading"
            @click.prevent="
              button_loading = true; 
              setTimeout(function(){ button_loading = false}, 1000);
              if (counter >= 1){
                changeCartItemQuantity('{{ item.key }}', {{ item.quantity }}-1, false, false);
              }
            ">
            {% render 'component__icon', icon: 'chevron-down', size: '14', class: '' %}
          </button>
        </div>
      </div>
  
      {% comment %} Buttons {% endcomment %}
      <div>
        <a 
          href="{{ item.url_to_remove }}"
          class="no-underline type--smaller">
          {{ 'actions.delete' | t }}
        </a>
      </div>
    </div>
    
  </div>
  
</div>