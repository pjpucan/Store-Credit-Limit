<!-- snippets/product__price.liquid -->
{% comment %} 
  Block for product price.

  Accepts:
  - blocksettings: {object} Liquid object of block settings.
  - is_featured: {boolean} Assigns product object from section settings. Set this to true if block is used within a section rather than product template.

  Usage:
    {% render 'product__price', 
      block: block, 
      is_featured: true 
    %}

  Recommendations:
  - This will display price, compare at price, and additional price info.
  - Prices will update to reflect any changes to variant selection.
{% endcomment %}

{% if is_featured %}

  {% comment %} Set product based on section settings {% endcomment %}
  {% assign product = section.settings.product %}

  {% comment %} Set placeholder product if blank {% endcomment %}
  {% if request.design_mode and product == null  %}
    {% for product in collections['all'].products limit:1 %}
      {% assign product = product %}
    {% endfor %}
  {% endif %}

{% endif %}

<div
  id="product-price"
  class="flex items-center gap-1">

  {% comment %} Product price {% endcomment %}
  <div class="flex gap-1">

    {% comment %} Price (will show min price then update to show selected price) {% endcomment %}
    <span 
      x-html="Shopify.formatMoney(current_variant_price)"
      x-show="all_options_selected">
    </span>

    {% comment %} Show "Starting at..." {% endcomment %}
    {% if product.price_varies and settings.price_range == "show_starting_price" %}
      <span 
        x-show="!all_options_selected">
        {{ 'labels.from' | t }} 
      </span>
    {% endif %}

    {% comment %} Price range {% endcomment %}
    <span 
      x-show="!all_options_selected">
      {% render 'component__format-price', price: product.price_min %}
    </span>
    {% if product.price_varies and settings.price_range == "show_range" %}
      <span 
        x-show="!all_options_selected">
        - 
        {% render 'component__format-price', price: product.price_max %}
      </span>
    {% endif %}

    {% comment %} Sale price {% endcomment %}
    {% if product.compare_at_price_max > 0 %}
      <s
        class="opacity-50"
        x-html="Shopify.formatMoney(current_variant_compare_price)"
        x-show="current_variant_compare_price > current_variant_price"
        x-cloak>
        {% render 'component__format-price', price: product.compare_at_price_max %}
      </s>
    {% endif %}

  </div>

  {% comment %} Unit price {% endcomment %}
  <span class="flex type--small" 
    x-show="current_variant_unit_price > 0" 
    x-cloak>
    {% for variant in product.variants limit: 1 %}
      <span x-html="Shopify.formatMoney(current_variant_unit_price)">
        {% render 'component__format-price', price: variant.unit_price %}
      </span>
      <span>/</span>
      <span x-text="current_variant_unit_label">
        {{ variant.unit_price_measurement.reference_value }}{{ variant.unit_price_measurement.reference_unit }}
      </span>
    {% endfor %}
  </span>

  {% comment %} Taxes badge {% endcomment %}
  {% if cart.taxes_included %}
    {% capture taxes_included %}
      {{ 'info.tax_included' | t }}
    {% endcapture %}
    <div class="mt-1">
      {% render 'component__badge', 
        background: 'transparent',
        text: 'dark',
        border: 'dark',
        icon: '',
        content: taxes_included %}
    </div>
  {% endif %}

</div>