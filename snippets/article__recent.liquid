{% comment %}
  This snippet is used to render a grid of blog articles. It dynamically adjusts the number of columns based on device type (desktop or mobile) and includes customizable gap sizing between grid items.

  Globals:
  - gap_size: {integer} The size of the gap in pixels between grid items.

  Accepts:
  - layout_row_desktop: {string} CSS class string to set the number of columns on desktop.
  - layout_row_mobile: {string} CSS class string to set the number of columns on mobile.
  - articles_count: {integer} The number of articles to display.

  Usage:
    {% render 'article__recent',
      layout_row_desktop: '3',
      layout_row_mobile: '1',
      articles_count: 5
    %}

  Recommendations:
  - Use this snippet to create a responsive article grid for blog sections.
  - Adjust 'articles_count' to limit the number of articles displayed based on design needs.
{% endcomment %}

<div 
  class="
    grid
    md:grid-cols-{{ block.settings.layout_row_desktop }}
    grid-cols-{{ block.settings.layout_row_mobile }}
  " 
  style="
    gap: {{ settings.gap_size }}px;
    padding-top:{{ block.settings.spacing_top }}px;
    padding-bottom:{{ block.settings.spacing_bottom }}px;
  ">
  {% for article in blogs[blog.handle].articles limit: block.settings.articles_count %}
    {% render 'component__blog-item', article: article %}
  {% endfor %}
</div>