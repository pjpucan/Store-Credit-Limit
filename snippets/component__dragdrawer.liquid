<!-- snippets/component__dragdrawer.liquid -->
{% comment %} 
  Slideout drawer to show extra content behind a click.

  Accepts:
  - drawer_id: {string} Unique id of drawer, should be set on top level elements.
  - desktop_pos: {string} Can be set to 'left' or 'right'. Determines the position of the drawer on desktop screens.
  - mobile_pos: {string} Can be set to 'top' or 'bottom'. Determines the position of the drawer on mobile screens.
  - enable_full_height: {boolean} If true, the drawer will take up 90% of the screen height. Otherwise, it will use the content's height.
  - content: {Object} Liquid object of drawer contents. The content to be displayed inside the drawer.
  
  Globals:
  - color_background_overlay: {string} Sets the background color of the overlay.
  - enable_animations: {boolean} Indicates if animations should be enabled.

  Usage:
    {% render 'component__dragdrawer', 
      drawer_id: 'menu_drawer',
      desktop_pos: 'right',
       mobile_pos: 'bottom',
      enable_full_height: true,
      content: drawer_content 
    %}
  
  Recommendations:
  - For this component to be accesibile by all other elements of the site we need to define the drawer_id on a global level - see theme__scripts.liquid for an example of how this is done.
{% endcomment %}

<section
  class="fixed inset-0 z-50 overflow-hidden "
  x-data="{ 
    pos_y: 0, 
    dragging: false
  }"
  @keyup.escape.window="{{ drawer_id }} = false;"
  x-show="{{ drawer_id }}"
  x-cloak>

  {% comment %} Overlay {% endcomment %}
  <div 
    class="absolute inset-0 w-full h-full backdrop-blur-md"
    style="
      background: {{ settings.color_background_overlay }};
    "
    aria-hidden="true"
    @click="
      {{ drawer_id }} = false; 
      has_overlay = false;
      quick_edit_handle = '';
    "
    x-show="{{ drawer_id }}"
    {% if settings.enable_animations %}
      x-transition:enter="animation-300"
      x-transition:enter-start="opacity-0"
      x-transition:enter-end="opacity-100"
      x-transition:leave="animation-300"
      x-transition:leave-start="opacity-100"
      x-transition:leave-end="opacity-0"
    {% endif %}
    x-cloak>
  </div>

  {% comment %} Drawer {% endcomment %}
  <div
    class="
      fixed flex w-screen 
      bottom-0 left-0 right-0 justify-end max-h-[90svh] md:max-h-none shadow-md
      {% if enable_full_height %}
        h-[90svh]
      {% endif %}
      {% if desktop_pos == 'left' %}
        md:max-w-xl md:h-full md:top-0 md:bottom-0 md:left-0 md:right-auto
      {% else %}
        md:max-w-xl md:h-full md:top-0 md:bottom-0 md:left-auto md:right-0
      {% endif %}
    "
    :class="[
      dragging ? '' : 'animation-300'
    ]"
    @touchend.window="
      dragging = false;
      startY: 0,
      pos_y = 0;
    "
    @touchstart="
      dragging = true;
      startY = $event.touches[0].clientY;
    "
    @touchmove.window="
      if (dragging) { 
        let deltaY = $event.touches[0].clientY - startY;
        if (deltaY > 0) {
          pos_y = deltaY;
          if (pos_y > window.innerHeight / 3) {
            dragging = false;
            pos_y = 1200;
            {{ drawer_id }} = false;
            has_overlay = false;
          }
        } else {
          pos_y = 0;
        }
      }
    "
    :style="
      'transform: translate(0px, ' + pos_y + 'px)'
    "
    x-trap="{{ drawer_id }}"
    x-show="{{ drawer_id }}"
    {% if settings.enable_animations %}
      {% capture transition_start %}
        {% if mobile_pos == 'top' %}!-translate-y-full{% else %}!translate-y-full{% endif %} md:!translate-y-0
      {% endcapture %}
      x-transition:enter="animation-300 opacity-0 {{ transition_start | strip }}"
      x-transition:enter-start="opacity-0 {{ transition_start | strip }}"
      x-transition:enter-end="!translate-y-0 opacity-100"
      x-transition:leave="animation-300 !translate-y-0 opacity-100"
      x-transition:leave-start="!translate-y-0 opacity-100"
      x-transition:leave-end="opacity-0 {{ transition_start | strip }}"
    {% endif %}
    x-cloak>
    <div class="w-screen">
      <div 
        class="
          flex flex-col h-full overflow-y-auto overscroll-none
          {% if background %}
            {{ background }}
          {% else %}
            color__bg-body color__text
          {% endif %}
        ">
        {{ content }}
      </div>
    </div>
  </div>

</section>