<!-- snippets/product__gallery-fullscreen.liquid -->
{% comment %} 
  A fullscreen overlay of zoomable product images. This snippet is used to display a fullscreen gallery of product images, 
  where each image can be zoomed in and out by clicking on it. The gallery also supports navigation through arrows.

  Accepts:
  - is_featured: {boolean} Assigns product object from section settings. Set this to true if block is used within a section rather than product template.

  Globals:
  - settings.x_margin: {string} Class string to set horizontal margin.

  Usage:
    {% render 'product__gallery-fullscreen', 
      is_featured: true 
    %}

  Recommendations:
  - Use this snippet to display a fullscreen gallery of product images in a product detail page.
  - Ensure that the product images are high resolution as they can be zoomed in.
{% endcomment %}

{% if is_featured %}

  {% comment %} Set product based on section settings {% endcomment %}
  {% assign product = section.settings.product %}

  {% comment %} Set placeholder product if blank {% endcomment %}
  {% if request.design_mode and product == null  %}
    {% for product in collections['all'].products limit:1 %}
      {% assign product = product %}
    {% endfor %}
  {% endif %}

{% endif %}

{% capture fullscreen_content %}

  {% capture slides %}
    {% for media in product.media %}
      <div 
        class="
          flex justify-center flex-none w-full h-full items-center whitespace-normal relative snap-center color__bg-shade-2 overflow-clip
          {% unless media.media_type == 'image' %} hidden {% endunless %}
        " 
        :class="{ 
          'z-10' : gallery_index == {{ forloop.index0 }}
        }"
        x-bind:data-slide="{{ forloop.index0 }}"
        x-intersect:enter.half="gallery_index = {{ forloop.index0 }};"
        @click="
          gallery_zoom_{{ forloop.index0 }} = !gallery_zoom_{{ forloop.index0 }};
          zoomed = !zoomed;
        ">
        <div 
          class="flex items-center justify-center flex-none w-full h-full cursor-zoom-in md:max-w-[70%]"
          x-show="!gallery_zoom_{{ forloop.index0 }}">
          {% render 'component__image',
            image: media,
            max_width: 1600,
            container_class: 'max-h-full max-w-full !w-auto absolute',
            image_class: 'max-h-full max-w-full',
            crop_class: 'object-contain',
            enable_lazy_load: true,
            enable_2x: true
          %}
        </div>
        <div 
          class="flex items-center justify-center flex-none w-full h-full pointer-events-none cursor-zoom-out"
          :class="{ 
            'hidden' : !gallery_zoom_{{ forloop.index0 }} 
          }"
          :style="
            'transform: translate('+(((mouse_x/width)-0.5)*100)+'%, '+(((mouse_y/height)-0.5)*100)+'%)'
          "
          @touchstart="
            if (zoomed) {
              touch_x = $event.touches[0].clientX;
              touch_y = $event.touches[0].clientY;
              is_dragging = false;
            }
          "
          @touchmove="
            if (zoomed) {
              if (Math.abs($event.touches[0].clientX - touch_x) > 10 || Math.abs($event.touches[0].clientY - touch_y) > 10) {
                is_dragging = true;
              }
            }
          "
          @touchend="
            if (!is_dragging) {
              gallery_zoom_{{ forloop.index0 }} = !gallery_zoom_{{ forloop.index0 }};
              zoomed = !zoomed;
            }
          "
          x-show="gallery_zoom_{{ forloop.index0 }}"
          x-cloak>
          {% capture image_class %}
            absolute object-contain h-auto max-w-full {{ section.settings.zoom_level }}
          {% endcapture %}
          {{ media
            | image_url: width: media.width 
            | image_tag: class: image_class, loading: 'lazy', alt: media.alt }}
        </div>
      </div>
    {% endfor %}
  {% endcapture %}
  
  <div 
    class="flex flex-col w-full"
    x-data="{
      mouse_x: 0,
      mouse_y: 0,
      height: 0,
      width: 0,
      zoomed: false,
      touch_x: 0,
      touch_y: 0,
      is_dragging: false
    }"
    @mousemove="
      height = $refs.fullscreen.offsetHeight;
      width = $refs.fullscreen.offsetWidth;
      mouse_x = $event.offsetX; 
      mouse_y = $event.offsetY;
    "
    @touchmove="
      height = $refs.fullscreen.offsetHeight;
      width = $refs.fullscreen.offsetWidth;
      mouse_x = $event.touches[0].clientX - $refs.fullscreen.getBoundingClientRect().left;
      mouse_y = $event.touches[0].clientY - $refs.fullscreen.getBoundingClientRect().top;
    "
    @touchstart="
      height = $refs.fullscreen.offsetHeight;
      width = $refs.fullscreen.offsetWidth;
    "
    @keyup.escape.window="
      has_overlay = false;
      fullscreen = false;
    "
    @keyup.left.window="galleryScrollBack();"
    @keyup.right.window="galleryScrollNext();">

    {% comment %} Media {% endcomment %}
    <div 
      class="relative flex flex-grow w-full"
      x-ref="fullscreen">

      {% comment %} Slides {% endcomment %}
      <div 
        class="inline-flex w-full gap-4 overflow-x-auto overflow-y-hidden whitespace-nowrap scroll-smooth hidescrollbar snap-x snap-mandatory js-zoomSlider"
        :class="{
          '!overflow-hidden': zoomed
        }"
        style="
          gap: {{ settings.gap_size }}px;
        "
        x-ref="slider">
        {{ slides }}
      </div>

      {% comment %} Indicators {% endcomment %}
      {% if product.media.size > 1 %}
        <div class="absolute left-0 right-0 z-20 px-4 text-center bottom-4 mix-blend-difference">
          <div class="flex flex-wrap items-center justify-center gap-2">
            {% for media in product.media %}
              <button 
                class="
                  bg-white animation-300--all border--radius w-2 h-1 opacity-25
                  {% unless media.media_type == 'image' %} hidden {% endunless %}
                " 
                :class="{ '!opacity-100 !w-3': gallery_index === {{ forloop.index0 }} }"
                @click="
                  galleryScrollToIndex({{ forloop.index0 }});
                "
                @touchend="
                  galleryScrollToIndex({{ forloop.index0 }});
                "
              >
              </button>
            {% endfor %}
          </div>
        </div>
      {% endif %}

    </div>
    
    {% comment %} Controls {% endcomment %}
    <div 
      class="
        py-4 w-full
        {{ settings.x_margin }}
      ">
      <div class="flex justify-between">
        <div class="flex gap-2">
          <button 
            class="btn btn--plain btn--small"
            title="{{ 'actions.zoom_out' | t }}"
            type="button"
            @click="galleryZoomOut();"
            @touchend="galleryZoomOut();"
            x-show="zoomed"
            x-cloak>
            {% render 'component__icon', icon: 'search-minus', size: '16', class: '' %}
          </button>
          <button 
            class="btn btn--plain btn--small"
            title="{{ 'actions.zoom_in' | t }}"
            type="button"
            @click="galleryZoomIn();"
            @touchend="galleryZoomIn();"
            x-show="!zoomed"
            x-cloak>
            {% render 'component__icon', icon: 'search-plus', size: '16', class: '' %}
          </button>
        </div>
        <div class="flex gap-2">
          <button 
            class="btn btn--plain btn--small"
            title="{{ 'actions.previous' | t }}"
            type="button"
            @click="galleryScrollBack();"
            @touchend="galleryScrollBack();">
            {% render 'component__icon', icon: 'chevron-left', size: '16', class: '' %}
          </button>
          <button 
            class="btn btn--plain btn--small"
            title="{{ 'actions.next' | t }}"
            type="button"
            @click="galleryScrollNext();"
            @touchend="galleryScrollNext();">
            {% render 'component__icon', icon: 'chevron-right', size: '16', class: '' %}
          </button>
        </div>
      </div>
    </div>
    
    {% comment %} Close {% endcomment %}
    <div class="absolute top-0 left-0 right-0 z-10">
      <div 
        class="
          py-4 w-full flex justify-end
          {{ settings.x_margin }}
        ">
        <button 
          class="btn btn--plain btn--small shadow-md !overflow-visible" 
          title="{{ 'actions.close' | t }}"
          type="button"
          @click="
            has_overlay = false;
            fullscreen = false; 
          ">
          {% render 'component__icon', icon: 'x', size: '16', class: '' %}
        </button>
      </div>
    </div>
    
  </div>
  
{% endcapture %}

{% render 'component__fullscreen', 
  fullscreen_id: 'fullscreen',
  content: fullscreen_content 
%}