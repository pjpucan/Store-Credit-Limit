<!-- snippets/product__stickyadd.liquid -->
{% comment %} 
  This file is a stickybar that displays a fixed add to cart button on product pages.

  Accepts:
  - blocksettings: {object} Liquid object of block settings.
      
  Usage:
    {% render 'product__stickyadd', 
      block: block 
    %}

  Globals: 
  - layout_horizontal: {string} Class string to set horizontal margin.
  - type_seperator: {string} Settting to set divider as a dot or line.

  Recommendations:
  - This snippet only works on product pages.
{% endcomment %}

<div 
  id="product-stickyadd"
  class="
    fixed w-auto z-30 animation-300

    {% if block.settings.position == "left" %}
      left-2 bottom-2 right-2 md:left-4 md:right-auto md:bottom-4 md:margin--gap shadow-md max-w-[500px] border--radius
    {% endif %}

    {% if block.settings.position == "right" %}
      right-2 left-2 bottom-2 md:left-auto md:right-4 md:bottom-4 md:margin--gap shadow-md max-w-[500px] border--radius
    {% endif %}

    {% if block.settings.position == "center" %}
      left-2 right-2 bottom-2 md:margin--gap !mx-auto shadow-md md:max-w-[70%] border--radius
    {% endif %}

    {% if block.settings.position == "full" %}
      left-0 bottom-0 w-full
    {% endif %}

    {{ block.settings.color_scheme }}
    {{ block.settings.color_border }}
  "
  x-ref="stickyadd"
  x-init="
    if (window.innerWidth <= 768) {
      console.log($refs.stickyadd.offsetHeight);
      {% if block.settings.position == 'full' %}
        sticky_bar_height_left = $refs.stickyadd.offsetHeight + {{ settings.type_base_size }};
        sticky_bar_height_right = $refs.stickyadd.offsetHeight + {{ settings.type_base_size }};
      {% else %}
        sticky_bar_height_left = $refs.stickyadd.offsetHeight + {{ settings.type_base_size  | times: 2 }};
        sticky_bar_height_right = $refs.stickyadd.offsetHeight + {{ settings.type_base_size  | times: 2 }};
      {% endif %}
    }
    else {
      console.log($refs.stickyadd.offsetHeight);
      {% case block.settings.position %}
        {% when 'left' %}
          sticky_bar_height_left = $refs.stickyadd.offsetHeight + {{ settings.type_base_size | times: 2 }};
        {% when 'right' %}
          sticky_bar_height_right = $refs.stickyadd.offsetHeight + {{ settings.type_base_size | times: 2 }};
        {% when 'full' %}
          sticky_bar_height_left = $refs.stickyadd.offsetHeight;
          sticky_bar_height_right = $refs.stickyadd.offsetHeight;
      {% endcase %}
    }
  "
  {% if block.settings.on_scroll %}
    :class="{ 
      'invisible opacity-0': !stickyadd, 
      'visible opacity-100': stickyadd 
    }"
  {% endif %}>
  <div class="{{ settings.x_margin }} p-4 md:p-6">
    <div 
      class="flex flex-row flex-wrap items-center justify-between gap-4">

      {% comment %} Title and text {% endcomment %}
      <div 
        class="
          hidden md:flex w-full md:w-auto gap-2 flex-col
          {% if block.settings.position == "full" %}
            md:w-auto
          {% endif %}
        ">
        <h3 class="type__heading type__heading-5">
          {{ product.title }}
        </h3>        
        {% unless block.settings.content == blank %}
          <div class="hidden md:block">
            {{ block.settings.content }}
          </div>
        {% endunless %}    
      </div>

      {% comment %} Action and options {% endcomment %}
      <div 
        class="flex flex-col w-full gap-4 md:flex-row md:w-auto">

        {% comment %} Options {% endcomment %}
        {% unless product.has_only_default_variant %}
          <div 
            class="inline-flex text-left"
            x-show="all_options_selected">
            <button 
              class="relative w-full px-4 py-2 appearance-none cursor-pointer border__input--radius border__input color__border-input color__bg-input border--input-style hover:border__input--hover focus:border__input--focus min-w-[256px]"
              type="button"
              @click="
                document.getElementById('js-options-' + '{{ section.id }}' + '-' + '{{ product.id }}').scrollIntoView();
              ">
              
              {% comment %} Text and swatch {% endcomment %}
              {% for variant in product.variants %}
                <span 
                  class="top-0 bottom-0 flex items-center h-full gap-4 left-2 truncate max-w-[70%]"
                  x-show="current_variant_id == {{ variant.id}}"
                  x-cloak>
                  {% comment %} Text {% endcomment %}
                  {{ variant.title }}
                </span>
              {% endfor %}

              {% comment %} Chevron icon {% endcomment %}
              <div class="absolute top-0 bottom-0 flex items-center h-full right-4">
                {% render 'component__icon', icon: 'chevron-down', size: '20' %}
              </div>

            </button>
          </div>
        {% endunless %}
        
        {% comment %} Actions {% endcomment %}
        <div
          class="w-full grow">
          
          {% comment %} Choose options, if non selected {% endcomment %}
          <button class="btn !w-full btn--load btn--plain"  
            :class="{ 'btn--loading' : cart_loading && button_loading }"
            type="button" 
            role="button" 
            disabled
            :disabled="button_loading"
            @click="
              failed_clicked = true; 
              document.getElementById('js-options-' + '{{ section.id }}' + '-' + '{{ product.id }}').scrollIntoView();
            "
            x-show="!all_options_selected"
            x-cloak>
            <div class="btn__content">
              {{ 'actions.choose_options' | t }}
            </div>
          </button>

          {% comment %} Sold out, if selected option unavailable {% endcomment %}
          <button class="btn !w-full btn--load btn--plain" 
            :class="{ 'btn--loading' : cart_loading && button_loading }" 
            type="button" 
            role="button"
            disabled  
            :disabled="button_loading"
            x-show="!current_variant_available && current_variant_exists && all_options_selected"  
            x-cloak>
            <div class="btn__content">
              {{ 'labels.sold_out' | t }}
            </div>
          </button>

          {% comment %} Unavailable, if selected option unavailable {% endcomment %}
          <button class="btn !w-full btn--load btn--plain" 
            :class="{ 'btn--loading' : cart_loading && button_loading }" 
            type="button" 
            role="button"
            disabled
            :disabled="button_loading"
            x-show="!current_variant_exists && all_options_selected"    
            x-cloak>
            <div class="btn__content">
              {{ 'labels.unavailable' | t }}
            </div>
          </button>

          {% comment %} Add to cart {% endcomment %}
          <button class="btn !w-full btn--load {{ block.settings.color_button }}"  
            type="submit"
            role="button"
            :class="{ 'btn--loading' : cart_loading && button_loading }"
            :disabled="button_loading"
            x-show="current_variant_exists && current_variant_available && all_options_selected">
            <div class="btn__content">
              {% if product.metafields.custom.button_text %}
                {{ product.metafields.custom.button_text }} {% if settings.type_seperator == 'dot' %}·{% else %}|{% endif %}
              {% else %}
                {{ 'actions.add' | t }} 
                {% if settings.show_button_prices %}
                  {% if settings.type_seperator == 'dot' %}·{% else %}|{% endif %}
                {% endif %}
              {% endif %}
              
              {% if settings.show_button_prices %}
                <span class="ml-1" 
                  x-html="Shopify.formatMoney(calculated_price)">
                  {% render 'component__format-price', price: product.price %}
                </span>
              {% endif %}
            </div>
            <div class="btn__spinner">
              {% render 'component__icon', icon: 'spinner', size: '24', class: '' %}
            </div>
          </button>
          
        </div>
        
      </div>
      
    </div>
  </div>
</div>