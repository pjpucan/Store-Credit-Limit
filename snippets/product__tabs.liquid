<!-- snippets/product__tabs.liquid -->
{% comment %} 
  Block for displaying up to three tabs with content.

  Accepts:
  - blocksettings: {object}: A liquid object of block settings.
      
  Usage:
    {% render 'product__tabs', 
      block: block 
    %}

  Recommendations:
  - Use metafields to display dynamic product content.
{% endcomment %}

{% liquid
  assign tabs = block.settings.tabs | split: ','
  assign first_tab = tabs[0] | handle
%}

<div 
  id="product-text"
  class="
    w-full
    {{ block.settings.color_scheme }}
    {{ block.settings.color_border }}
    {{ block.settings.style_border }}
    {% if block.settings.layout_x_alignment == 'left' %}
      text-left
    {% elsif block.settings.layout_x_alignment == 'center' %}
      text-center
    {% elsif block.settings.layout_x_alignment == 'right' %}
      text-right
    {% elsif block.settings.layout_x_alignment == 'justify' %}
      text-justify
    {% endif %}
  "
  style="
    padding-top:{{ block.settings.spacing_top }}px;
    padding-bottom:{{ block.settings.spacing_bottom }}px;
  "
  x-data="{
    selected_tab: '{{ first_tab }}',
  }">
  
  {% comment %} Scrollable tabs {% endcomment %}
  <nav 
    class="
      flex flex-wrap  border--b-width px-4 
      {{ block.settings.color_border }}
    ">
    <div class="relative w-full">
      <div class="inline-flex w-full gap-6 overflow-x-auto whitespace-nowrap scroll-smooth snap-x">
        {% for tab in tabs %}
          <div class="flex justify-center flex-none snap-center">
            <button
              class="pb-4 border-b-2 opacity-50 type--big color__border-transparent"
              :class="{
                '!opacity-100 !color__border-selected-2' : selected_tab === '{{ tab | handle }}'
              }"
              type="button"
              @click="selected_tab = '{{ tab | handle }}';">
              {{ tab }}
            </button>
          </div>
        {% endfor %}
      </div>
    </div>
  </nav>

  {% comment %} Tab containers {% endcomment %}
  {% for tab in tabs %}
    {% assign tab_handle = tab | handle %}
    <div 
      class="px-4 pt-4"
      x-show="selected_tab === '{{ tab_handle }}'"
      {% if tab_handle != first_tab %}
        x-cloak
      {% endif %}>
      {% case forloop.index %}
        {% when 1 %}
          {{ block.settings.content_1 }}
        {% when 2 %}
          {{ block.settings.content_2 }}
        {% when 3 %}
          {{ block.settings.content_3 }}
        {% else %}
          {{ block.settings.content_1 }}
      {% endcase %}
    </div>
  {% endfor %}

</div>

