<!-- sections/recommendations-slider.liquid -->
{% comment %} 
  Slider of recommended products. 

  Globals:
  - layout_horizontal: {string} Horizontal margin from global theme settings.
  - layout_gap_size: {integer} Set the gap between grid items.
  - enable_animations: {boolean} Global setting to determine if animations are enabled.

  Recommendations:
  - Recomendations can be updated using Search and Discovery app.
  - Can be set to either complimentary or related products.
  - This section will only work on product templates.
{% endcomment %}

<section 
  id="{{ section.id }}"
  class="
    animation-1000
    {{ section.settings.visibility }}
    {{ section.settings.color_border }}
    {{ section.settings.style_border }}
    {% unless section.settings.enable_color_fade %}
      {{ section.settings.color_text }}
      {% unless section.settings.color_scheme == 'custom' %}
        {{ section.settings.color_scheme }}
      {% endunless %}
    {% endunless %}
  "
  {% if section.settings.color_scheme == 'custom' %}
    {% unless section.settings.enable_color_fade %}
      style="
        background:{{ section.settings.color_background }};
      "
    {% endunless %}
  {% endif %}
  {% if section.settings.enable_color_fade %}
    :class="`${body_background_color} ${body_text_color}`"
    :style="{ background: body_background_color }"
    x-intersect.margin.-50%="
      body_background_color = '{% if section.settings.color_scheme == 'custom' %}{{ section.settings.color_background }}{% else %}{{ section.settings.color_scheme }}{% endif %}';
      body_text_color = '{{ section.settings.color_text }}';
    "
  {% endif %}>
  <div
    class="
      {% if section.settings.enable_margin %}
        {{ settings.x_margin }}
      {% endif %}
    "
    style="
      padding-top:{{ section.settings.spacing_top }}px;
      padding-bottom:{{ section.settings.spacing_bottom }}px;
    "
    x-data="{
      initialLoad: true,
      loadingRecomendations : false,
      recomended_products: [],
      getRecomendations(){
        fetch(window.Shopify.routes.root + 'recommendations/products.json?product_id={{ product.id }}&limit={{ section.settings.products_count }}&intent={{ section.settings.intent }}')
        .then(response => response.json())
        .then(({ products }) => {
          if (products.length > 0) {
            this.recomended_products = products;
            this.loadingRecomendations = true;
            this.initialLoad = false;
          }
        });
      }
    }"
    x-show="recomended_products.length > 0 || initialLoad == true"
    x-init="getRecomendations();">
    <div
      class="
        flex flex-wrap items-start justify-between
        {% if section.settings.enable_split %}
          flex-row
        {% else %}
          flex-col
        {% endif %}
      ">

      {% comment %} Header {% endcomment %}
      <div 
        class="
          flex w-full flex-col
          {% if section.settings.enable_split %}md:w-1/3 md:pr-4{% endif %}
          {% unless section.settings.enable_margin %}
            px-4
          {% endunless %}
        ">
        {% render 'component__section-header' %} 
      </div>

      {% comment %} Loading placeholder {% endcomment %}
      <div 
        class="
          relative flex w-full group
          {% if section.settings.enable_split %}md:w-2/3{% endif %}
        "
        x-show="!loadingRecomendations">
        <div 
          class="inline-flex w-full overflow-x-auto overflow-y-hidden whitespace-nowrap scroll-smooth hidescrollbar md:snap-x md:snap-mandatory"
          style="
            gap: {{ settings.gap_size }}px;
            {% if section.settings.enable_margin %}
              padding-left: {{ settings.border_element_width }}px;
              padding-right: {{ settings.border_element_width }}px;
            {% else %}
              {% if settings.gap_size > 1 %}
                padding-left: {{ settings.gap_size }}px;
                padding-right: {{ settings.gap_size }}px;
              {% endif %}
            {% endif %}
            padding-top: {{ settings.border_element_width }}px;
            padding-bottom: {{ settings.border_element_width }}px;
          ">
          <div class="md:w-[30%] flex justify-center flex-none w-8/12">
            {% render 'component__skeleton-grid' %}
          </div>
          <div class="md:w-[30%] flex justify-center flex-none w-8/12">
            {% render 'component__skeleton-grid' %}
          </div>
          <div class="md:w-[30%] flex justify-center flex-none w-8/12">
            {% render 'component__skeleton-grid' %}
          </div>
        </div>
      </div>

      {% comment %} Results {% endcomment %}
      <div 
        class="
          relative flex w-full group
          {% if section.settings.enable_split %}md:w-2/3{% endif %}
        "
        x-data="{
      
          index: 0, // the current active slide
          show_arrows: false, // hide arrows by default
      
          // check if slider extends width
          isOverflown(element) {
            return element.scrollWidth > element.clientWidth;
          },
      
          // scroll to a specific item
          scrollToIndex(indexToScroll) {
            this.index = indexToScroll;
            let slider = this.$refs.slider;
            let currentSlide = slider.querySelector('[data-slide=&quot;' + indexToScroll + '&quot;]');
            if (currentSlide) {
              let sliderWidth = slider.offsetWidth;
              let currentSlidePosition = currentSlide.offsetLeft;
              let currentSlideWidth = currentSlide.offsetWidth;
              let centerPosition = currentSlidePosition + currentSlideWidth / 2 - sliderWidth / 2;
          
              slider.scrollTo({
                top: 0,
                left: centerPosition,
                behavior: 'smooth'
              });
            }
          },
      
          // scroll to next item
          scrollNext() {
            let slider = this.$refs.slider;
            let nextScrollPosition = slider.scrollLeft + slider.clientWidth;
            if (nextScrollPosition >= slider.scrollWidth - 20) {
              nextScrollPosition = 0;
            }
            slider.scrollTo({
              top: 0,
              left: nextScrollPosition,
              behavior: 'smooth'
            });
          },
          
          // scroll to previous item
          scrollBack() {
            let slider = this.$refs.slider;
            let previousScrollPosition = slider.scrollLeft - slider.clientWidth;
            if (slider.scrollLeft <= 20) {
              previousScrollPosition = slider.scrollWidth - slider.clientWidth;
            }
            slider.scrollTo({
              top: 0,
              left: previousScrollPosition,
              behavior: 'smooth'
            });
          }
      
        }"
        x-show="recomended_products.length > 0 && loadingRecomendations"
        x-cloak>
        
        {% comment %} Arrows {% endcomment %}
        <div 
          class="absolute z-20 justify-end hidden w-full gap-4 opacity-0 bottom-full md:flex animation-300 top-4 right-4 group-hover:opacity-100 focus-within:opacity-100"
          x-show="show_arrows && !has_overlay"
          x-cloak>
          <div>
            <button 
              class="btn btn--secondary btn--smaller cursor-w-resize"
              style="cursor: w-resize;"
              title="{{ 'actions.previous' | t }}"
              {% if settings.enable_animations %}
                x-transition:enter="animation-300"
                x-transition:enter-start="opacity-0"
                x-transition:enter-end="opacity-100"
                x-transition:leave="animation-300"
                x-transition:leave-start="opacity-100"
                x-transition:leave-end="opacity-0"
              {% endif %}
              @click="scrollBack();">
              {% render 'component__icon', icon: 'chevron-left', size: '16', class: '' %}
            </button>
          </div>
          <div>
            <button 
              class="btn btn--secondary btn--smaller cursor-e-resize"
              style="cursor: e-resize;"
              title="{{ 'actions.next' | t }}"
              {% if settings.enable_animations %}
                x-transition:enter="animation-300"
                x-transition:enter-start="opacity-0"
                x-transition:enter-end="opacity-100"
                x-transition:leave="animation-300"
                x-transition:leave-start="opacity-100"
                x-transition:leave-end="opacity-0"
              {% endif %}
              @click="scrollNext();">
              {% render 'component__icon', icon: 'chevron-right', size: '16', class: '' %}
            </button>
          </div>
        </div>

        {% comment %} Slides {% endcomment %}
        <div 
          class="inline-flex w-full overflow-x-auto overflow-y-hidden whitespace-nowrap scroll-smooth hidescrollbar md:snap-x md:snap-mandatory" 
          style="
            gap: {{ settings.gap_size }}px;
            {% if section.settings.enable_margin %}
              padding-left: {{ settings.border_element_width }}px;
              padding-right: {{ settings.border_element_width }}px;
            {% else %}
              {% if settings.gap_size > 1 %}
                padding-left: {{ settings.gap_size }}px;
                padding-right: {{ settings.gap_size }}px;
              {% endif %}
            {% endif %}
            padding-top: {{ settings.border_element_width }}px;
            padding-bottom: {{ settings.border_element_width }}px;
          "
          x-ref="slider"
          x-init="
            setTimeout(function(){ 
              if (isOverflown($el)) show_arrows = true
            }, 600);
          ">
          <template x-for="(item, index) in recomended_products">
            <div 
              class="
                md:w-[30%] flex justify-center flex-none w-8/12
              "
              x-bind:data-slide="index"
              x-intersect:enter.half="index = index;">
              {% render 'template__product-grid' %}
            </div>
          </template>
        </div>

      </div>
    
    </div>
  </div>
</section>

{% schema %}
{
  "name":"t:sections.recommendations_slider.name",
  "settings":[
    {
      "type":"select",
      "id":"intent",
      "label":"t:general.settings.intent.label",
      "info":"t:general.settings.intent.info",
      "options":[
        {
          "value":"related",
          "label":"t:general.settings.intent.related.label"
        },
        {
          "value":"complementary",
          "label":"t:general.settings.intent.complementary.label"
        }
      ],
      "default":"related"
    },
    {
      "type":"number",
      "id":"products_count",
      "label":"t:general.settings.items_to_display.label",
      "default":7
    },
    {
      "type":"header",
      "content":"t:general.headers.content.content"
    },
    {
      "type":"text",
      "id":"heading",
      "label":"t:general.settings.heading.label",
      "default":{
        "en":"You may also like",
        "es":"También te puede interesar",
        "it":"Potrebbe interessarti anche",
        "de":"Das könnte Sie auch interessieren",
        "fr":"Vous aimerez peut-être aussi"
      }
    },
    {
      "type":"richtext",
      "id":"content",
      "label":"t:general.settings.content.label"
    },
    {
      "type":"header",
      "content":"t:general.headers.spacing.content"
    },
    {
      "type":"range",
      "id":"spacing_top",
      "min":0,
      "max":300,
      "step":10,
      "unit":"px",
      "label":"t:general.settings.top_spacing.label",
      "default":100
    },
    {
      "type":"range",
      "id":"spacing_bottom",
      "min":0,
      "max":300,
      "step":10,
      "unit":"px",
      "label":"t:general.settings.bottom_spacing.label",
      "default":100
    },
    {
      "type":"header",
      "content":"t:general.headers.color.content"
    },
    {
      "type":"select",
      "id":"color_scheme",
      "label":"t:general.settings.color_scheme.label",
      "options":[
        {
          "value":"color__bg-body",
          "label":"t:general.settings.color_scheme.body.label"
        },
        {
          "value":"color__bg-neutral",
          "label":"t:general.settings.color_scheme.neutral.label"
        },
        {
          "value":"color__bg-overlay-1",
          "label":"t:general.settings.color_scheme.accent_1.label"
        },
        {
          "value":"color__bg-overlay-2",
          "label":"t:general.settings.color_scheme.accent_2.label"
        },
        {
          "value":"color__bg-overlay-3",
          "label":"t:general.settings.color_scheme.accent_3.label"
        },
        {
          "value":"color__bg-shade-1",
          "label":"t:general.settings.color_scheme.shade_1.label"
        },
        {
          "value":"color__bg-shade-2",
          "label":"t:general.settings.color_scheme.shade_2.label"
        },
        {
          "value":"color__bg-shade-3",
          "label":"t:general.settings.color_scheme.shade_3.label"
        },
        {
          "value":"color__bg-primary",
          "label":"t:general.settings.color_scheme.primary.label"
        },
        {
          "value":"color__bg-secondary",
          "label":"t:general.settings.color_scheme.secondary.label"
        },
        {
          "value":"color__bg-tertiary",
          "label":"t:general.settings.color_scheme.tertiary.label"
        },
        {
          "value":"custom",
          "label":"t:general.settings.color_scheme.custom.label"
        }
      ],
      "default":"color__bg-body"
    },
    {
      "type":"color",
      "id":"color_background",
      "label":"t:general.settings.color_custom.label",
      "info":"t:general.settings.color_custom.info",
      "default":"#ffffff"
    },
    {
      "type":"select",
      "id":"color_text",
      "label":"t:general.settings.color_text.label",
      "options":[
        {
          "value":"",
          "label":"t:general.settings.color_text.default.label"
        },
        {
          "value":"color__light",
          "label":"t:general.settings.color_text.force_light.label"
        },
        {
          "value":"color__dark",
          "label":"t:general.settings.color_text.force_dark.label"
        }
      ],
      "default":""
    },
    {
      "type":"select",
      "id":"color_border",
      "label":"t:general.settings.color_border.label",
      "options":[
        {
          "value":"color__border-divider-1",
          "label":"t:general.settings.color_border.subtle.label"
        },
        {
          "value":"color__border-selected-1",
          "label":"t:general.settings.color_border.strong.label"
        }
      ],
      "default":"color__border-divider-1"
    },
    {
      "type": "checkbox",
      "id": "enable_color_fade",
      "label":"t:general.settings.enable_color_fade.label",
      "info":"t:general.settings.enable_color_fade.info",
      "default": false
    },
    {
      "type":"header",
      "content":"t:general.headers.style.content"
    },
    {
      "type":"select",
      "id":"style_border",
      "label":"t:general.settings.border_position.label",
      "options":[
        {
          "value":"",
          "label":"t:general.settings.border_position.none.label"
        },
        {
          "value":"border--t-width",
          "label":"t:general.settings.border_position.top.label"
        },
        {
          "value":"border--b-width",
          "label":"t:general.settings.border_position.bottom.label"
        },
        {
          "value":"border--b-width border--t-width",
          "label":"t:general.settings.border_position.top_and_bottom.label"
        }
      ],
      "default":"border--b-width"
    },
    {
      "type":"header",
      "content":"t:general.headers.layout.content"
    },
    {
      "type":"select",
      "id":"layout_x_alignment",
      "label":"t:general.settings.x_alignment.label",
      "options":[
        {
          "value":"justify-between",
          "label":"t:general.settings.x_alignment.left.label"
        },
        {
          "value":"text-center justify-center flex-col items-center",
          "label":"t:general.settings.x_alignment.center.label"
        }
      ],
      "default":"justify-between"
    },
    {
      "type":"checkbox",
      "id":"enable_margin",
      "label":"t:general.settings.enable_margin.label",
      "default":true
    },
    {
      "type":"checkbox",
      "id":"enable_split",
      "label":"t:general.settings.enable_split.label",
      "default":false
    },
    {
      "type":"header",
      "content":"t:general.headers.display.content"
    },
    {
      "type":"select",
      "id":"visibility",
      "label":"t:general.settings.visibility.label",
      "options":[
        {
          "value":"",
          "label":"t:general.settings.visibility.all.label"
        },
        {
          "value":"md:hidden",
          "label":"t:general.settings.visibility.mobile.label"
        },
        {
          "value":"hidden md:block",
          "label":"t:general.settings.visibility.desktop.label"
        }
      ],
      "default":""
    }
  ],
  "presets":[
    {
      "name":"t:sections.recommendations_slider.name"
    }
  ],
  "templates":[
    "product"
  ]
}
{% endschema %}